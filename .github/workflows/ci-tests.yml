# This workflow will install CESM, create visualCaseGen conda env, and run all CI tests.

name: visualCaseGen CI

on:
  push:
    branches: [ "main", "ci" ]
  pull_request:
    branches: [ "main", "ci" ]

jobs:
  ci_tests:
    name: visualCaseGen CI tests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    steps:

      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils
      - name: Checkout VisualCaseGen to temp folder
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: VCGTEMP
      # clone CESM
      - name: Checkout CESM
        uses: actions/checkout@v4
        with:
          repository: alperaltuntas/CESM
          ref: cesm3_0_beta06_gui
          path: CESM
          #submodules: recursive

      # Run git-fleximod
      - name: Checkout CESM submodules
        env:
          GIT_CLONE_PROTECTION_ACTIVE: false
        run: |
          cd CESM
          ./bin/git-fleximod update
  
      # Copy the checked out visualCaseGen branch to the CESM visualCaseGen folder
      - name: Copy VCG checkout into the correct folder
        run: |
          cp -r VCGTEMP/* CESM/visualCaseGen/

      # set up conda
      - uses: conda-incubator/setup-miniconda@v3

      # visualCaseGen conda env
      - name: Create visualCaseGen conda env
        run: |
          cd CESM/visualCaseGen/
          conda env create --file environment.yml
          conda activate visualCaseGen
    
      # Run all tests
      - name: Run tests
        env:
          CIME_MODEL: "cesm"
          CIME_DRIVER: "nuopc"
          CIME_TEST_PLATFORM: ubuntu-latest
        run: |
          export SRC_PATH="${GITHUB_WORKSPACE}"
          mkdir -p /home/runner/cesm/scratch
          cd CESM/visualCaseGen/
          conda activate visualCaseGen
          pytest tests
